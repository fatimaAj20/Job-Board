CREATE TRIGGER `added_application` AFTER INSERT ON `job_applications`
 FOR EACH ROW BEGIN
DECLARE user_id bigint;
SELECT userId INTO user_id FROM seekers WHERE id= seekerId;
 INSERT INTO event_summary (userId, event_Type) VALUES (user_id , 'added application');
 END

CREATE TRIGGER `adding_job` AFTER INSERT ON `job_posts`
 FOR EACH ROW BEGIN
DECLARE user_id bigint;
SELECT userId INTO user_id FROM employers WHERE id= employerId;
 INSERT INTO event_summary (userId, event_Type) VALUES (user_id , 'adding job');
 END

CREATE TRIGGER `check_salary` BEFORE INSERT ON `job_posts`
 FOR EACH ROW IF NEW.salary < 1000 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Salary cannot be     less than 1000';
  END IF

CREATE TRIGGER `deleted_application` AFTER DELETE ON `job_applications`
 FOR EACH ROW BEGIN
DECLARE user_id bigint;
SELECT userId INTO user_id FROM seekers WHERE id= seekerId;
 INSERT INTO event_summary (userId, event_Type) VALUES (user_id , 'deleted application');
 END

CREATE TRIGGER `deleting_Job` AFTER DELETE ON `job_posts`
 FOR EACH ROW BEGIN
DECLARE user_id bigint;
SELECT userId INTO user_id FROM employers WHERE id= employerId;
 INSERT INTO event_summary (userId, event_Type) VALUES (user_id , 'deleting job');
 END

CREATE TRIGGER `modified_application` AFTER UPDATE ON `job_applications`
 FOR EACH ROW BEGIN
DECLARE user_id bigint;
SELECT userId INTO user_id FROM seekers WHERE id= seekerId;
 INSERT INTO event_summary (userId, event_Type) VALUES (user_id , 'modified application');
 END

CREATE TRIGGER `send_Notification_Employer` AFTER INSERT ON `job_applications`
 FOR EACH ROW BEGIN
DECLARE employer_id bigint;
DECLARE user_id bigint;
SELECT employerId INTO employer_id FROM job_posts where jobId=New.jobId;
SELECT userId INTO user_id FROM employers where id=employer_id;
INSERT INTO notifications(userId, message, isRead)VALUES(user_id,'New job application recieved',0);
END

CREATE TRIGGER `send_Notification_Seeker` AFTER UPDATE ON `job_applications`
 FOR EACH ROW BEGIN
DECLARE user_id bigint;
  SELECT userId INTO user_id FROM seekers WHERE id= NEW.seekerId;
IF NEW.status = 0 THEN
   INSERT INTO notifications (userId, message, isread) VALUES (user_id, 'your application is rejected', 0);
  ELSEIF NEW.status = 1 THEN
   INSERT INTO notifications (userId, message, isread) VALUES (user_id, 'your application is accepted', 0);
  END IF;
END

CREATE TRIGGER `updateStatus` AFTER UPDATE ON `employer_registration_requests`
 FOR EACH ROW IF NEW.status = 0 THEN
    UPDATE employers
    SET active = 0
    WHERE employers.id = NEW.employerId;
  ELSEIF NEW.status = 2 THEN
    UPDATE employers
    SET active = 1
    WHERE employers.id = NEW.employerId;
  END IF

CREATE TRIGGER `updating job` AFTER UPDATE ON `job_posts`
 FOR EACH ROW BEGIN
DECLARE user_id bigint;
SELECT userId INTO user_id FROM employers WHERE id= employerId;
 INSERT INTO event_summary (userId, event_Type) VALUES (user_id , 'updating job');
 END